{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAzCGO,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAoBC,GAClBA,EAAMC,iBAEN,MAAQX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAEtC,IAAIC,EAAYC,OAAOH,EAAOI,OAC1BC,EAAUF,OAAOJ,EAAKK,OACtBE,EAAWH,OAAOL,EAAMM,OAE5BG,QAAQC,IAAIZ,EAAMK,eAElB,IAAK,IAAIQ,EAAI,EAAGA,GAAKP,EAAWO,GAAK,EACnCzB,EAAcyB,EAAGH,GACdI,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAeC,MAAU,IAGnDoB,GAAYD,EAEdT,EAAMK,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', formSubmit);\n\nfunction formSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget;\n\n  let amountVal = Number(amount.value);\n  let stepVal = Number(step.value);\n  let delayVal = Number(delay.value);\n\n  console.log(event.currentTarget);\n\n  for (let i = 1; i <= amountVal; i += 1) {\n    createPromise(i, delayVal)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayVal += stepVal;\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","amountVal","Number","value","stepVal","delayVal","console","log","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.28f320e2.js.map"}